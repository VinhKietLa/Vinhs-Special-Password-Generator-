// Array of special characters to be included in password
let specialCharacters = [
  '@',
  '%',
  '+',
  '\\',
  '/',
  "'",
  '!',
  '#',
  '$',
  '^',
  '?',
  ':',
  ',',
  ')',
  '(',
  '}',
  '{',
  ']',
  '[',
  '~',
  '-',
  '_',
  '.'
];

// Array of numeric characters to be included in password
let numericCharacters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];

// Array of lowercase characters to be included in password
let lowerCasedCharacters = [
  'a',
  'b',
  'c',
  'd',
  'e',
  'f',
  'g',
  'h',
  'i',
  'j',
  'k',
  'l',
  'm',
  'n',
  'o',
  'p',
  'q',
  'r',
  's',
  't',
  'u',
  'v',
  'w',
  'x',
  'y',
  'z'
];

// Array of uppercase characters to be included in password
let upperCasedCharacters = [
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z'
];
let userNumberInput; //This is an empty variable which will store the number that the user inputs into the lengthOfPassword prompt.//
let arrayPasswordInput  = []; //This will be the array that is generated based upon the selections of the prompts by the user.//
let newPasswordString = ''; //This is an emtpy variable which will store a new string that is generated by the getRandomPassword function.//


// This function prompts the user to enter a password length from 10 to 64 and it will repeat if the user does not meet this condition, once the condition is met the value is stored in the variable userNumberInput.//
function userPromptPasswordLength () {
  let lengthOfPassword = prompt('Enter the number of characters you would like your password between 10 to 64 characters.');

if (lengthOfPassword == null) {//If the user clicks cancel then the window will reload. //
  location.reload();
} else if (lengthOfPassword == ''){ //If the user clicks ok and does not enter a number then they will get an alert advising them to.//
    alert('Please enter a number between 10 to 64!');
    userPromptPasswordLength();
} else if(isNaN(Number(lengthOfPassword))) {
    alert('Please enter a number between 10 o 64ony, no other characters!'); //If the user enters a NaN character such as 'a' this function will advise the user to enter numbers only//
    userPromptPasswordLength();
}
  else if (lengthOfPassword < 9 || lengthOfPassword > 64) {
    alert('Please enter a number between 10 to 64 only!');
    userPromptPasswordLength(); //Calling the function again will prompt the user to input a number that meets the condition.//
  }
  else {
    lengthOfPassword = parseInt(lengthOfPassword);
    userNumberInput = lengthOfPassword
    getPasswordOptions();
  }

}
// This function prompts the user for password options (special characters etc) and if conditions are met then the corresponding array is concatenated into the variable arrayPasswordInput. It also checks if a value is not equal to no//
function getPasswordOptions() {
  let atLeastOneChracter = 0;//This keeps a count of the number of prompts that the user has selected//
  let specialPrompt = prompt("Do you want special characters? typ 'ye' r 'no' or click ok(yes or anel(no)");
  if (specialPrompt != null) {
    specialPrompt = specialPrompt.toUpperCase();
    if (specialPrompt === 'YES' || specialPrompt === '') {
      arrayPasswordInput = arrayPasswordInput.concat(specialCharacters);
      atLeastOneChracter++;
    }
  }
  let numericPrompt = prompt("Do you want numbers?type' r' no 'or' click ok(') or cancel(no)");
  if (numericPrompt != null) {
    numericPrompt = numericPrompt.toUpperCase();
    if (numericPrompt === 'YES' || numericPrompt === '') {
      arrayPasswordInput = arrayPasswordInput.concat(numericCharacters);
      atLeastOneChracter++;
    }
  }
  let lowerCasePrompt = prompt("Do you want lowercase letters?type' r' no 'or' click ok(') or cancel(no)");
  if (lowerCasePrompt != null) {
    lowerCasePrompt = lowerCasePrompt.toUpperCase();
    if (lowerCasePrompt === 'YES' || lowerCasePrompt === '') {
      arrayPasswordInput = arrayPasswordInput.concat(lowerCasedCharacters);
      atLeastOneChracter++;
    }
  }
  let upperCasePrompt = prompt("Do you want uppercase letters?type' r' no 'or' click ok(') or cancel(no)");
  if (upperCasePrompt != null) {
    upperCasePrompt = upperCasePrompt.toUpperCase();
    if (upperCasePrompt === 'YES' || upperCasePrompt === '') {
      arrayPasswordInput = arrayPasswordInput.concat(upperCasedCharacters);
      atLeastOneChracter++;
    }
  }
  if (atLeastOneChracter === 0) {
    alert("You need to select at least one character type!");
    getPasswordOptions();//if no prompts are selected then the user is notified and will be given the options again//
  }
}


// This function loops through the arrayPasswordInput variable based on the number specified in the userNumberInput variable.//

function getRandomPassword() {
  for(let arr = 0; arr<userNumberInput; arr++) {
    let randomIndex = Math.floor(Math.random() * arrayPasswordInput.length); //This generates a random index from the arrayPasswordInput array.
    newPasswordString += arrayPasswordInput[randomIndex]; //As the for loop is executing, it is taking a random value from the array and it is adding this to the empty string newPasswordString variable.//
  }
}

// This function executes the getPasswordOptions first in order to be able to have an array that an be looped through in the getRandomPassword function, it then returns the string that was generated by the getRandomPassword function to be used as the passwordText.value in the writePassword function.
function generatePassword() {
  userPromptPasswordLength();
  getRandomPassword();
  return newPasswordString;
}

// Get references to the #generate element
let generateBtn = document.querySelector('#generate');

// Write password to the #password input
function writePassword() {
  let password = generatePassword();
  let passwordText = document.querySelector('#password');
  passwordText.value = password;
}

// Add event listener to generate button
generateBtn.addEventListener('click', writePassword);


//Pseudo code //

//Generate the password
  //There are 4 arrays which I need to loop through and take one  random value from each to create a password as a start//
  //When I loop through each array, I will need to store each value in 4 variables or 1 variable as a string? //
  //The prompt input from the user will determine the length of the loop? as well as which array I use to make the character//
  //The users character length would I use a loop to execute it e.g 10 times then conditionals to take a value from each array?



              //Pseudo code //
  

//Click 'Generate Password' button//
    
    //This will then execute the getPasswordOptions, this function will be a series of prompts to validate the password criteria//

    //Store the prompt value into variables to be used in the getRandomPassword function//

    //In the getRandomPassword function we will loop through the four arrays.

    //Before we create the password we will need to check each prompt.//
    //First prompt we will check if the input is <= 10), if it isn't send another prompt asking for the numbers that meet the criteria.

    // whether a value is null (No) or 'NO' string is entered if it is we can skip this array from the loop?//

    //If there is a value '' (OK) or 'YES' string is entered we will use that array as part of the loop to create the password. 

//getRandomPassword function//

    //This function will take the values from the getPasswordOptions and then validate each prompt. 

      //Run the loop based on the number that the user has entered in the lengthOfPassword prompt, pwLength.length? 
      //include the relevant array in the loop based on the getPasswordOptions. 
      //Run the loop and put the values into one variable each loop?
      //This variable can then used as the passwordText.value?

    // concat all the selected arrays and then loop based on the number of arrays that meet the conditions. 



    // randompw += randomSpecialCharacter;

    // // this generates a random numeric character
    // let randomNumericCharacters = Math.floor(Math.random() * numericCharacters.length);
  
    // randompw += randomNumericCharacters;
  
    
    // // this generates a random lowercase character
    // let randomLowerCasedCharacters = Math.floor(Math.random() * lowerCasedCharacters.length);
  
    // randompw += randomLowerCasedCharacters;
  
    // // this generates a random uppercase character
    // let randomUpperCasedCharacters = Math.floor(Math.random() * upperCasedCharacters.length);
  
    // randompw += randomUpperCasedCharacters;
    // return console.log(randompw);


